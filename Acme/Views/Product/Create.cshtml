@model Acme.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.ProductID, new { maxlength = "20", style = "width:160px;" })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.Name, new { maxlength = "20", style = "width:160px;" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.DropDownListFor(m => m.CategoryID, new SelectListItem[]{
                    new SelectListItem() {Text = "Costumes", Value="costumes"},
                    new SelectListItem() {Text = "Masks", Value="masks"},
                    new SelectListItem() {Text = "Special Effects", Value="fx"},
                    new SelectListItem() {Text = "Props", Value="props"}})
            </div>
        </div>

        <div class="form-group">
            <input type="text" name="ImageFile" value="@Model.ImageFile" readonly />
            <br />
            <input type="file" name="uploadfile" />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.UnitPrice, new { maxlength = "20", style = "width:160px;" })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OnHand, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.OnHand, new { maxlength = "20", style = "width:160px;" })
                @Html.ValidationMessageFor(model => model.OnHand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.ShortDescription, new { @cols = 80, @rows = 2, style = "max-width:600px;width:600px;" })
                @Html.ValidationMessageFor(model => model.ShortDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.LongDescription, new { @cols = 80, @rows = 4, style = "max-width:600px;width:600px;" })
                @Html.ValidationMessageFor(model => model.LongDescription)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
